name: foodgram_workflow

on:
  push:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt
      - name: Lint with flake8
        run: flake8 . --ignore=E1,E23,W503,E501,W291,W391,W605 --exclude=./recipes/migrations,./api/migrations,.requirements.txt

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: raikirixd/foodgram-project:latest
  deploy:
    name: Deploy on server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yaml, nginx"
          target: "~/foodgram-project"
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ~/foodgram-project
            rm .env
            touch .env
            echo ${{ secrets.DB_ENGINE }} >> .env && echo ${{ secrets.DB_NAME }} >> .env && echo ${{ secrets.POSTGRES_USER }} >> .env && echo ${{ secrets.POSTGRES_PASSWORD }} >> .env && echo ${{ secrets.DB_HOST }} >> .env && echo ${{ secrets.DB_PORT }} >> .env && echo ${{ secrets.SECRET_KEY }} >> .env && echo ${{ secrets.EMAIL_HOST_USER }} >> .env && echo ${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            sudo docker pull raikirixd/foram-project:latest
            sudo docker-compose stop
            sudo docker-compose rm web -f
            sudo docker-compose up -d
            sudo docker cp .env foodgram-project_web_1:/code
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
